---
// Componente para mostrar el prompt de instalación PWA
---

<div id="pwa-install-banner" class="hidden fixed bottom-4 left-4 right-4 z-50 bg-blue-600 text-white p-4 rounded-lg shadow-lg">
  <div class="flex items-center justify-between">
    <div class="flex-1">
      <h3 class="font-semibold text-xl">Instalar aplicación</h3>
      <p class="text-lg opacity-90">Agrega esta app a tu pantalla de inicio para acceso rápido</p>
    </div>
    <div class="flex gap-2 ml-4">
      <button id="pwa-install-button" class="bg-white text-blue-600 px-3 py-1 rounded text-lg font-medium hover:bg-gray-100 cursor-pointer">
        Instalar
      </button>
      <button id="pwa-dismiss-button" class="text-white/80 hover:text-white text-2xl leading-none p-1 cursor-pointer">
        ×
      </button>
    </div>
  </div>
</div>

<script>
  // PWA Install functionality
  let deferredPrompt: any;
  const installBanner = document.getElementById('pwa-install-banner');
  const installButton = document.getElementById('pwa-install-button');
  const dismissButton = document.getElementById('pwa-dismiss-button');

  // Listen for the beforeinstallprompt event
  window.addEventListener('beforeinstallprompt', (e) => {
    // Prevent the mini-infobar from appearing on mobile
    e.preventDefault();
    
    // Check if user has dismissed the banner recently
    const dismissed = localStorage.getItem('pwa-dismissed');
    if (dismissed) {
      const dismissedTime = parseInt(dismissed);
      const dayInMs = 24 * 60 * 60 * 1000;
      if (Date.now() - dismissedTime < dayInMs) {
        // Don't show banner if dismissed within last 24 hours
        return;
      }
    }
    
    // Save the event so it can be triggered later
    deferredPrompt = e;
    // Show the install banner
    if (installBanner) {
      installBanner.classList.remove('hidden');
    }
  });

  // Handle install button click
  if (installButton) {
    installButton.addEventListener('click', async () => {
      if (deferredPrompt) {
        // Show the install prompt
        deferredPrompt.prompt();
        // Wait for the user to respond to the prompt
        const { outcome } = await deferredPrompt.userChoice;
        console.log(`User response to the install prompt: ${outcome}`);
        // Clear the deferredPrompt variable
        deferredPrompt = null;
        // Hide the banner
        if (installBanner) {
          installBanner.classList.add('hidden');
        }
      }
    });
  }

  // Handle dismiss button click
  if (dismissButton) {
    dismissButton.addEventListener('click', () => {
      if (installBanner) {
        installBanner.classList.add('hidden');
      }
      // Store dismissal in localStorage to not show again for a while
      localStorage.setItem('pwa-dismissed', Date.now().toString());
    });

  }

  // Listen for app installed event
  window.addEventListener('appinstalled', () => {
    console.log('PWA was installed');
    if (installBanner) {
      installBanner.classList.add('hidden');
    }
  });
</script>
